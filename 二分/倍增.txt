最近公共祖先 lca

利用二进制的思想，想办法使一步一步向上搜索变成以 2^{k} 的向上跳。所以定义一个f[][]数组，使f[j][i]表示节点i的 2^{j} 倍祖先。

快速幂

给出x，y，p，求 x^{y}%p，如果x,y的数据很大的话，O(n)的算法会超时，那么这时候我们可以用倍增的方法减少运算次数

先求出

x^{1} x^{2} x^{4} x^{8}.....(不过几十次运算)

对于任意一个y, x^{y} 都可以由上面的项做乘积得到（也不过是几十次运算）

这样就大大减少了运算次数